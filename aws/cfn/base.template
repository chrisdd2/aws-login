AWSTemplateFormatVersion: '2010-09-09'
Description: >
  IAM setup with:
    - Permissions boundary to prevent unrestricted IAM user creation
    - Developer role (full access, restricted by boundary)
    - Read-only role
    - Roles assumeable only by specified principal

Parameters:
  ManagementRoleArn:
    Type: String
    Description: Management role arn
  DeveloperRoleName:
    Type: String
    Description: name for developer role
  ReadOnlyRoleName:
    Type: String
    Description: name for read only role
  PermissionBoundaryName:
    Type: String
    Description: name for the permission boundary on iam roles
  MaxSessionDuration:
    Type: Number
    Description: session duration for roles

Resources:

  IAMPermissionsBoundary:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Ref PermissionBoundaryName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: DenyAllIAMUserActions
            Effect: Deny
            Action:
              - iam:CreateUser
              - iam:DeleteUser
            Resource: "*"

          - Sid: DenyCreateRoleWithoutBoundary
            Effect: Deny
            Action:
              - iam:CreateRole
            Resource: "*"
            Condition:
              StringNotEqualsIfExists:
                iam:PermissionsBoundary: !Sub "arn:aws:iam::${AWS::AccountId}:policy/${PermissionBoundaryName}"

          - Sid: DenyUpdateRoleToRemoveBoundary
            Effect: Deny
            Action:
              - iam:UpdateRole
            Resource: "*"
            Condition:
              StringNotEqualsIfExists:
                iam:PermissionsBoundary: !Sub "arn:aws:iam::${AWS::AccountId}:policy/${PermissionBoundaryName}"
          - Sid: DenyBoundaryActions
            Effect: Deny
            Action:
              - iam:*Boundary
            Resource: "*"
          - Sid: AllowEverythingElse
            Effect: Allow
            Action:
              - "*"
            Resource: "*"


  DeveloperRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref DeveloperRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref ManagementRoleArn
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      PermissionsBoundary: !Ref IAMPermissionsBoundary
      MaxSessionDuration: !Ref MaxSessionDuration


  ReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ReadOnlyRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref ManagementRoleArn
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      PermissionsBoundary: !Ref IAMPermissionsBoundary
      MaxSessionDuration: !Ref MaxSessionDuration

Outputs:
  DeveloperRoleArn:
    Description: ARN of the Developer Role
    Value: !GetAtt DeveloperRole.Arn

  ReadOnlyRoleArn:
    Description: ARN of the ReadOnly Role
    Value: !GetAtt ReadOnlyRole.Arn
